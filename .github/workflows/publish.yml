name: "publish"

on:
  workflow_call:
    secrets:
      NuGetApiKey:
        description: "NuGet API Key"
        required: false
    inputs:
      NuGetApiUrl:
        description: "Target NuGet Feed Url"
        type: string
        required: false
      modules:
        description: "Powershell modules to publish (json, array of objects)"
        type: string
        required: true

jobs:
  publish:
    strategy:
      matrix:
        module: ${{ fromJson(inputs.modules) }}
    name: ${{ matrix.module.id }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - id: auto-release
        uses: cloud-tek/actions/auto-release@0.19
        with:
          branch: main
          configuration: .config/configuration.changelog.json
      - name: setup gitversion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: run giversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: nuget.config (pwsh)
        shell: pwsh
        run: |
          $nuget = @"
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <packageSources>
              <add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" />
            </packageSources>
            <packageRestore>
              <add key="enabled" value="True" />
              <add key="automatic" value="True" />
            </packageRestore>
            <bindingRedirects>
              <add key="skip" value="False" />
            </bindingRedirects>
            <packageManagement>
              <add key="format" value="0" />
              <add key="disabled" value="False" />
            </packageManagement>
          </configuration>
          "@
          $nuget | Out-File -FilePath ${{ github.workspace }}/nuget.config
      - name: version.ps1
        shell: pwsh
        working-directory: ${{ github.workspace }}/scripts
        run: |
          ./Version.ps1 `
            -module ${{ matrix.module.id }} `
            -version ${{ env.GitVersion_NuGetVersionV2 }};
      - name: Install-Module
        shell: pwsh
        working-directory: ${{ github.workspace }}
        run: |
          Install-Module PowershellGet -Force -AllowPrerelease;
      - name: diag pwsh modules (/opt/microsoft/powershell/7/Modules)
        shell: bash
        working-directory: /opt/microsoft/powershell/7/Modules
        run: |
         tree
      - name: diag pwshget (/opt/microsoft/powershell/7/Modules)
        shell: bash
        working-directory: /opt/microsoft/powershell/7/Modules
        run: |
         cat ./PowerShellGet/PowerShellGet.psd1
      - name: diag pwsh modules (/usr/local/share/powershell/Modules)
        shell: bash
        working-directory: /usr/local/share/powershell/Modules
        run: |
         tree
      - name: diag pwshget (/usr/local/share/powershell/Modules)
        shell: bash
        working-directory: /usr/local/share/powershell/Modules
        run: |
         cat ./PowerShellGet/PowerShellGet.psd1
      - name: publish.ps1
        shell: pwsh
        working-directory: ${{ github.workspace }}/scripts
        run: |
          ./Publish.ps1 `
            -module ${{ matrix.module.id }} `
            -url ${{ inputs.NuGetApiUrl }} `
            -apikey ${{ secrets.NuGetApiKey }} `
            -version ${{ env.GitVersion_NuGetVersionV2 }};
      - name: get-error
        if: failure()
        shell: pwsh
        working-directory: ${{ github.workspace }}/scripts
        run: |
          Get-Error
